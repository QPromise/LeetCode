#自顶向下，方法实现参考链接https://mp.weixin.qq.com/s/3h9iqU4rdH3EIy5m6AzXsg
class Solution(object):
    def climbStairs(self, n,map={}):
        """
        :type n: int
        :rtype: int
        """
        if n==1:
            return 1
        if n==2:
            return 2
        if map.has_key(n):
            return map[n]
        else:
            value=self.climbStairs(n-1)+self.climbStairs(n-2)
            map[n]=value
            return value
#自底向上来写，降低它的空间复杂度。
class Solution(object):
    def climbStairs(self, n):
        """
        :type n: int
        :rtype: int
        """
        if n<1:
            return 0 
        if n==1:
            return 1
        if n==2:
            return 2
        num={1:1,2:2}
        for i in range(3,n+1):
            temp=num[i-1]+num[i-2]
            num[i]=temp
        return num[i]
